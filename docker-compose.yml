services:

  postgres:
    image: postgres:16.6
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U innoshop_user -d innoshop_users"]
      interval: 10s
      retries: 3
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_USERS_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - innoshop_network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 5050:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - innoshop_network
    depends_on:
      postgres:
        condition: service_healthy

  users.api:
    image: ${DOCKER_REGISTRY-}usersapi
    build:
      context: .
      dockerfile: Users.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ASPNETCORE_HTTP_PORTS: 8080
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      POSTGRES_DB: ${POSTGRES_USERS_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PRODUCTS_API_BASEURL: ${PRODUCTS_API_BASEURL}
      X_SVC_AUTH_HEADER: ${X_SVC_AUTH_HEADER}
    networks:
      - innoshop_network
    ports:
      - "8080:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      postgres:
        condition: service_healthy

  products.api:
    image: ${DOCKER_REGISTRY-}productsapi
    build:
      context: .
      dockerfile: Products.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ASPNETCORE_HTTP_PORTS: 8082
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      POSTGRES_DB: ${POSTGRES_PRODUCTS_DB} 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      USERS_API_BASEURL: ${USERS_API_BASEURL}
      X_SVC_AUTH_HEADER: ${X_SVC_AUTH_HEADER}
    networks:
      - innoshop_network
    ports:
      - "8082:8082"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      postgres:
        condition: service_healthy

  # tests:
  #   image: ${DOCKER_REGISTRY-}tests
  #   build:
  #     context: .
  #     dockerfile: Tests/Dockerfile
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: Testing
  #     JWT_SECRET_KEY: ${JWT_SECRET_KEY}
  #     POSTGRES_DB_USERS: ${POSTGRES_USERS_DB}_test
  #     POSTGRES_DB_PRODUCTS: ${POSTGRES_PRODUCTS_DB}_test
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     X_SVC_AUTH_HEADER: ${X_SVC_AUTH_HEADER}
  #   networks:
  #     - innoshop_network
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   command: ["dotnet", "test"]

volumes:
  postgres_data:
  pgadmin_data:  
    
networks:
  innoshop_network:
    driver: bridge
